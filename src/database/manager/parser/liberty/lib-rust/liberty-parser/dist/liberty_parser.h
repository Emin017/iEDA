/*
Gutengerg Post Parser, the C bindings.

Warning, this file is autogenerated by `cbindgen`.
Do not modify this manually.

*/

#include <stdarg.h>
#include <stdbool.h>
#include <stdint.h>
#include <stdlib.h>

/**
 * The complex attribute statement.
 * # Example
 * index_1 ("0.0010,0.0020,0.0030");
 */
typedef struct LibertyComplexAttrStmt LibertyComplexAttrStmt;

/**
 * The group statement.
 * # Example
 *
 * wire_load("5K_hvratio_1_1") {
 * capacitance : 1.774000e-01;
 * resistance : 3.571429e-03;
 * slope : 5.000000;
 * fanout_length( 1, 1.7460 );
 * fanout_length( 2, 3.9394 );
 * fanout_length( 3, 6.4626 );
 * fanout_length( 4, 9.2201 );
 * fanout_length( 5, 11.9123 );
 * fanout_length( 6, 14.8358 );
 * fanout_length( 7, 18.6155 );
 * fanout_length( 8, 22.6727 );
 * fanout_length( 9, 25.4842 );
 * fanout_length( 11, 27.0320 );
 * }
 */
typedef struct LibertyGroupStmt LibertyGroupStmt;

/**
 * The simple attribute statement.
 * # Example
 * capacitance : 1.774000e-01;
 */
typedef struct LibertySimpleAttrStmt LibertySimpleAttrStmt;

typedef struct String String;

/**
 * liberty string value.
 * # Examples
 * "0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070"
 */
typedef struct LibertyStringValue {
    struct String value;
} LibertyStringValue;

/**
 * liberty float value.
 * # Examples
 * 1.7460
 */
typedef struct LibertyFloatValue {
    double value;
} LibertyFloatValue;

typedef enum LibertyParserData_Tag {
    GroupStmt,
    ComplexStmt,
    SimpleStmt,
    String,
    Float,
    Null,
} LibertyParserData_Tag;

typedef struct LibertyParserData {
    LibertyParserData_Tag tag;
    union {
        struct {
            struct LibertyGroupStmt group_stmt;
        };
        struct {
            struct LibertyComplexAttrStmt complex_stmt;
        };
        struct {
            struct LibertySimpleAttrStmt simple_stmt;
        };
        struct {
            struct LibertyStringValue string;
        };
        struct {
            struct LibertyFloatValue float_;
        };
    };
} LibertyParserData;

struct LibertyParserData *rust_parse_lib(const char *s);
